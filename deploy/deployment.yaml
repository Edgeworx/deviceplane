---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: deviceplane
  namespace: deviceplane
  annotations:
    vault.hashicorp.com/bind: 'true'
    vault.hashicorp.com/inline-policy: |
      path "secret/data/deviceplane" {
        capabilities = ["read"]
      }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: deviceplane
  name: deviceplane
  namespace: deviceplane
spec:
  replicas: 1
  selector:
    matchLabels:
      app: deviceplane
  template:
    metadata:
      labels:
        app: deviceplane
      annotations:
        kubectl.kubernetes.io/default-container: controller
        vault.hashicorp.com/agent-inject: 'true'
        vault.hashicorp.com/tls-secret: vault-ca
        vault.hashicorp.com/ca-cert: /vault/tls/ca.crt
        vault.hashicorp.com/role: deviceplane-deviceplane
        vault.hashicorp.com/agent-inject-secret-env: secret/deviceplane
        vault.hashicorp.com/agent-inject-template-env: |
          {{- with secret "secret/deviceplane" -}}
          {{- range $k, $v := .Data.data }}
          export {{ $k }}={{ $v }}
          {{ end }}
          {{- end }}
    spec:
      imagePullSecrets:
        - name: ghcr-registry
      serviceAccountName: deviceplane
      containers:
      - name: controller
        image: ghcr.io/edgeworx/deviceplane-controller:latest
        imagePullPolicy: Always
        command:
        - /bin/sh
        - -c
        - |
          #!/bin/sh
          set -e
          set -x
          source /vault/secrets/env ;
          /bin/controller \
            --addr :80 \
            --email-provider smtp \
            --email-from-address noreply@deviceplane.com \
            --smtp-server smtp.sendgrid.net \
            --smtp-port "465" \
            --smtp-username apikey \
            --auth0-domain https://deviceplane.auth0.com/ \
            --db-max-open-conns "5" \
            --db-max-idle-conns "5" \
            --db-max-conn-lifetime 5m \
            --allowed-origin https://cloud.dev.edgeworx.io \
            --allowed-origin https://cloud.dev.darcy.ai \
            --allowed-origin http://localhost:3000 \
            --allowed-origin https://localhost:3000
        ports:
        - containerPort: 80
          name: http
          protocol: TCP
        resources: {}